<#@ template  debug="true" hostSpecific="false" language="C#" linePragmas="false" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="m_ClassName" #>
<#@ parameter type="System.String" name="m_Namespace" #>
<#@ parameter type="System.Boolean" name="m_IsPartialClass" #>
<#@ parameter type="System.Boolean" name="m_IsStaticClass" #>
<#@ parameter type="System.String" name="m_Indent" #>
<#@ parameter type="System.String" name="m_SaveLocation" #>
<#@ parameter type="System.String" name="m_AssetHash" #>
<#@ parameter type="System.Boolean" name="m_IsEnumDefinedInClass" #>
<# WriteClassOutline();#>
<#+
	public string indent
    {
		get { return m_Indent; }
    }

    /// <summary>
    /// A function used to define any content that should exist in this classes namespace.
    /// </summary>
    public virtual void WriteNamespaceContent()
    {
        WriteLine("// No namespace content defined");
    }

    /// <summary>
    /// This class contains all our GUI Content labels that we use in Script Forge
    /// </summary>
    public virtual void WriteClassContent()
    {
        WriteLine("// No class content defined");
    }

    /// <summary>
    /// Invoked when the enum should be defined by this widget.
    /// </summary>
    public virtual void WriteEnumContent()
    {

    }

    /// <summary>
    /// Invoked when the helper functions should be defined by this widget.
    /// </summary>
	public virtual void WriteHelperFunctions()
    {

    }

    /// <summary>
    /// Writes the namespace (if it has one) and the class and all braces. This function
    /// will then call WriteNamespaceContent for stuff in that scope and WriteClassContent()
    /// for everything contained in that scope.
    /// </summary>
    public virtual void WriteClassOutline()
    {
#>
//------------------------------------------------------------------------------
// <auto-generated>
// <#= Path.GetFileName(m_SaveLocation) #>
// This code was generated by ScriptForge. To rebuild the code go to 
// Project Settings ->Script Forge and on that window hit generate all. Any
// changes made to this script will be overwritten.  
// Asset Hash: <#= m_AssetHash #>
// </auto-generated>
//------------------------------------------------------------------------------
<#+
        bool hasNamespace = !string.IsNullOrEmpty(m_Namespace);
    
        if(hasNamespace)
        {
            Write("namespace ");
            WriteLine(m_Namespace);
            WriteLine("{");
            PushIndent(m_Indent);
        }

        WriteNamespaceContent();

        if(!m_IsEnumDefinedInClass)
        {
            WriteEnumContent();
        }
            
        {	// Start class
            Write("public ");
            if(m_IsStaticClass)
            {
                Write("static ");
            }

            if(m_IsPartialClass)
            {
                Write("partial ");
            }
            Write("class ");
            WriteLine(m_ClassName);
            WriteLine("{");
            PushIndent(m_Indent);
            if(m_IsEnumDefinedInClass)
            {
                WriteEnumContent();
            }
            WriteClassContent();
			WriteHelperFunctions();
            PopIndent();
            Write("}");
        } // End Class
        if(hasNamespace)
        {
            PopIndent();
            GenerationEnvironment.AppendLine();
            Write("}");
        }
    }
#>
