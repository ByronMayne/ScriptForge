// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ScriptForge
{
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class ResourcesTemplate : ScriptForge.BaseTemplate
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
 WriteClassOutline(); 
            return this.GenerationEnvironment.ToString();
        }

    /// <summary>
    /// A function used to define any content that should exist in this classes namespace.
    /// </summary>
    public override void WriteNamespaceContent()
    {
    }

	/// <summary>
    /// This class contains all our GUI Content labels that we use in Script Forge
    /// </summary>
    public override void WriteClassContent()
    {
		Dic

		for(int i = 0; i < m_ResourcePaths.Length; i++)
        {
			Write("public const string ");
			Write(m_ResourcePaths[i].ToUpper());
			Write(" = \"");
			Write(m_ResourcePaths[i]);
			WriteLine("\";");
        }
    }


private string[] _m_ResourcePathsField;

/// <summary>
/// Access the m_ResourcePaths parameter of the template.
/// </summary>
private string[] m_ResourcePaths
{
    get
    {
        return this._m_ResourcePathsField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool m_ResourcePathsValueAcquired = false;
if (this.Session.ContainsKey("m_ResourcePaths"))
{
    this._m_ResourcePathsField = ((string[])(this.Session["m_ResourcePaths"]));
    m_ResourcePathsValueAcquired = true;
}
if ((m_ResourcePathsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("m_ResourcePaths");
    if ((data != null))
    {
        this._m_ResourcePathsField = ((string[])(data));
    }
}


    }
}


    }
}
